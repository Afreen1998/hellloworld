apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: docker-build-task
spec:
  params:
    - name: task-pvc
      description: the task pvc - this is the volume where the files (Dockerfile etc..) are expected to be
    - name: continuous-delivery-context-secret
      description: name of the configmap containing the continuous delivery pipeline context secrets
      default: cd-secret
  steps:
    - name: docker-build-step
      image: docker
      imagePullPolicy: IfNotPresent
      workingDir: /artifacts
      env:
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        - name: DOCKER_TLS_VERIFY
          value: '1'
        # Use the certs generated by the sidecar daemon.
        - name: DOCKER_CERT_PATH
          value: /certs/client
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: API_KEY
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -e -o pipefail
          
          echo "Building the image ..."
          ls
          cd helloworldapp
          ls
          docker build -t us.icr.io/afrintest/helloworldapp .

          #Docker login
          docker login -u iamapikey -p $API_KEY us.icr.io
          docker push us.icr.io/afrintest/helloworldapp
              
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /certs/client
          name: dind-certs
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(params.task-pvc)
    - name: dind-certs
      emptyDir: {}
  sidecars:
    - image: docker:19-dind
      name: server
      securityContext:
        privileged: true
      command: ["sh", "-c"]
      env:
        # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      args:
        - if [[ $(df -PT /var/lib/docker | awk 'NR==2 {print $2}') == virtiofs ]]; then 
            apk add e2fsprogs && 
            truncate -s 20G /tmp/disk.img && 
            mkfs.ext4 /tmp/disk.img && 
            mount /tmp/disk.img /var/lib/docker; fi &&
          dockerd-entrypoint.sh --mtu=1400;
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ["ls", "/certs/client/ca.pem"]



  